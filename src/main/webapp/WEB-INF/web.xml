<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://java.sun.com/xml/ns/javaee"
		 xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
		 version="3.0">
	<display-name>Archetype Created Web Application</display-name>
	<!-- Spring和mybatis的配置文件 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring-mybatis.xml</param-value>
	</context-param>
	<!-- 编码过滤器 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 解决xss漏洞 -->
	<filter>
		<filter-name>xssFilter</filter-name>
		<filter-class>org.pachinko.filter.XssFilter</filter-class>
	</filter>
	<!-- 解决xss漏洞 -->
	<filter-mapping>
		<filter-name>xssFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 解决sql注入 -->
	<filter>
		<filter-name>sqlFilter</filter-name>
		<filter-class>org.pachinko.filter.AntiSqlInjectionfilter</filter-class>
	</filter>
	<!-- 解决sql注入 -->
	<filter-mapping>
		<filter-name>sqlFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- session过滤器 -->
	<!--<filter>
		<filter-name>sessionFilter</filter-name>
		<filter-class>org.pachinko.filter.SessionFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>sessionFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>-->


	<!-- Spring监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>

	<!--********************************** servlet ********************************** -->

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.jpg</url-pattern>
		<url-pattern>*.js</url-pattern>
		<url-pattern>*.css</url-pattern>
		<url-pattern>*.png</url-pattern>
		<url-pattern>*.gif</url-pattern>
		<url-pattern>*.json</url-pattern>
		<url-pattern>*.swf</url-pattern>
		<url-pattern>*.xml</url-pattern>
		<url-pattern>*.html</url-pattern>
		<url-pattern>*.txt</url-pattern>
		<url-pattern>*.ico</url-pattern>
		<url-pattern>*.crx</url-pattern>
		<url-pattern>*.pdf</url-pattern>
	</servlet-mapping>



	<!-- Spring MVC servlet -->
	<servlet>
		<servlet-name>SpringMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>
	<servlet-mapping>
		<servlet-name>SpringMVC</servlet-name>
		<url-pattern>*.htm</url-pattern>
		<!-- 为了识别websocket -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>



	<!-- Spring Security
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>-->

	<welcome-file-list>
		<welcome-file>index.htm</welcome-file>
	</welcome-file-list>

	<jsp-config>
		<jsp-property-group>
			<description>Special property group for JSP Configuration JSP example.</description>
			<display-name>JSPConfiguration</display-name>
			<url-pattern>*.jsp</url-pattern>
			<page-encoding>UTF-8</page-encoding>
		</jsp-property-group>
	</jsp-config>
	<!-- 配置SESSION超时，单位是分钟 -->
	<session-config>
		<session-timeout>120</session-timeout>
	</session-config>

</web-app>
